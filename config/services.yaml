# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    api_key: '%env(API_KEY)%'
    upload_bands_directory: '%kernel.project_dir%/public/images/bands'
    upload_logos_directory: '%kernel.project_dir%/public/images/logos'
    upload_icons_directory: '%kernel.project_dir%/public/images/icons'
    festival_start_date: '%env(FESTIVAL_START_DATE)%'
    festival_end_date: '%env(FESTIVAL_END_DATE)%'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    
    _instanceof :
        Nelmio\CorsBundle\EventListener\CorsListener:
            tags: ['kernel.event_listener']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Form\ConcertType:
        arguments:
            $festivalStartDate: '%festival_start_date%'
            $festivalEndDate: '%festival_end_date%'

    App\Security\JwtSuccessHandler:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }
    




#Firewall pour l'authentification des utilisateurs en utilisant le bundle LexikJWTAuthenticationBundle#



    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
